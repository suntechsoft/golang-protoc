version: 2.1

executors:
  default:
    docker:
      - image: globalgames/compilations:new
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    working_directory: /

commands:
  set_version:
    steps:
      - run:
          name: Set VERSION
          command: |
           
            BRANCH=`echo $CIRCLE_BRANCH | sed 's/.*\/\(.*\)/\1/' | awk '{print tolower($0)}' | tr _ - `

            echo "BRANCH=$BRANCH"

            if [[ -z "$CIRCLE_TAG" ]] 
                then 
                    export APP_VERSION=$BRANCH 
                else 
                    export APP_VERSION=`echo $CIRCLE_TAG | sed 's/\(v[0-9]*\.[0-9]*\.[0-9]*\).*/\1/'`
            fi

            echo "APP_VERSION=$APP_VERSION"

            # v1.2.3 -> v1
            # develop -> develop
            if echo $APP_VERSION | grep -Eq 'v[0-9]+\.[0-9]+\.[0-9]+'
              then 
                MAJOR_VERSION=`echo $APP_VERSION | sed  's/\(v[0-9]*\).*/\1/'`
              else 
                MAJOR_VERSION=$APP_VERSION
            fi

            echo "MAJOR_VERSION=$MAJOR_VERSION"

            # v1.2.3 -> v1.2
            # develop -> develop
            if echo $APP_VERSION | grep -Eq 'v[0-9]+\.[0-9]+\.[0-9]+'
              then 
                MINOR_VERSION=`echo $APP_VERSION | sed  's/\(v[0-9]*\.[0-9]*\).*/\1/'`
              else 
                MINOR_VERSION=$APP_VERSION
            fi

            echo "MINOR_VERSION=$MINOR_VERSION"

            #v1.2.3 -> v1-2-3
            HELM_VERSION=`echo $APP_VERSION | sed -e 's/\./-/g'`

            echo "HELM_VERSION=$HELM_VERSION"

            # v1.2.3-uiaidb-355
            DOCKER_FULL_VERSION=$APP_VERSION-${CIRCLE_SHA1:0:7}-$CIRCLE_BUILD_NUM
            
            if [[ -z "$CIRCLE_TAG" ]]; then
              DOCKER_VERSION=$DOCKER_FULL_VERSION
            else 
              DOCKER_VERSION=$APP_VERSION
            fi

            DOCKER_SHORT_VERSION=$APP_VERSION-$CIRCLE_BUILD_NUM

            echo "export BRANCH=$BRANCH" > VERSION
            echo "export VERSION=$VERSION" >> VERSION
            echo "export APP_VERSION=$APP_VERSION" >> VERSION
            echo "export MAJOR_VERSION=$MAJOR_VERSION" >> VERSION
            echo "export MINOR_VERSION=$MINOR_VERSION" >> VERSION
            echo "export HELM_VERSION=$HELM_VERSION" >> VERSION
            echo "export DOCKER_FULL_VERSION=$DOCKER_FULL_VERSION" >> VERSION
            echo "export DOCKER_VERSION=$DOCKER_VERSION" >> VERSION
            echo "export DOCKER_SHORT_VERSION=$DOCKER_SHORT_VERSION" >> VERSION

  docker_login:
    steps:
      - run:
          name: Docker Login
          command: echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin

  docker_build_push:
    steps:
      - run:
          name: Build and Push Image
          command: |
            source VERSION

            cd ./build
            
            docker build -t globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_VERSION .
            docker tag globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_VERSION globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_SHORT_VERSION 
            docker tag globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_VERSION globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_FULL_VERSION
            docker push globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_VERSION
            docker push globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_SHORT_VERSION
            docker push globalgames/$CIRCLE_PROJECT_REPONAME:$DOCKER_FULL_VERSION

references:
  workspace_root: &workspace_root
    /

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_images:
    docker:
      - image: docker:git
    working_directory: *workspace_root
    steps:
      - *attach_workspace
      - setup_remote_docker
      - set_version
      - docker_login
      - docker_build_push

workflows:
  version: 2
  golang-protoc:
    jobs:
      - build_images:
          context: org-global
          filters:
            tags:
              only: /^v.*/